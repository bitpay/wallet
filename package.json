{
  "name": "bitpay",
  "description": "Secure Bitcoin Wallet",
  "author": "BitPay",
  "version": "12.9.0",
  "keywords": [
    "bitcoin",
    "wallet",
    "bitpay",
    "copay",
    "multisignature",
    "bitcore"
  ],
  "main": "electron/main.js",
  "title": "BitPay",
  "user-agent": "%name %ver (%osinfo)",
  "webkit": {
    "page-cache": false,
    "java": false,
    "plugin": false
  },
  "dom_storage_quota": 200,
  "id": "jid1-x7bV5evAaI1P9Q",
  "homepage": "https://bitpay.com",
  "license": "MIT",
  "repository": {
    "url": "git://github.com/bitpay/copay.git",
    "type": "git"
  },
  "bugs": {
    "url": "https://github.com/bitpay/copay/issues"
  },
  "scripts": {
    "postinstall": "npm run env:dev && npm run prompt && npm run patch:all",
    "electron:patch": "(! grep -q 'com.apple.security.app-sandbox' ./node_modules/app-builder-lib/templates/entitlements.mac.plist && sed -i -e \"/<dict>/ a\\ \n<key>com.apple.security.app-sandbox</key><true/>\" ./node_modules/app-builder-lib/templates/entitlements.mac.plist) | echo 'electron patched.'",
    "patch:bwc": "(sed -i -e 's/\\#private;//' ./node_modules/bitcore-wallet-client/ts_build/lib/key.d.ts) | echo 'BWC patched.'",
    "patch:walletconnect": "sh ./utils/walletconnect-patch.sh | echo 'walletconnect patched.'",
    "patch:web3": "(sed -i -e \"s/{ ...options, fromBlock: 'latest' };/Object.assign( options, {fromBlock: latest})/g\" ./node_modules/web3-core-helpers/lib/formatters.js) | echo 'web3 patched.'",
    "patch:all": "npm run patch:bwc && npm run patch:walletconnect && npm run patch:web3",
    "prompt": "\n\n\n\n\n\n#\n#  Choose a distribution with:\n#\n#     $ npm run apply:copay\n#              or\n#     $ npm run apply:bitpay\n#\n",
    "start": "npm run ionic:serve",
    "clean": "rm -rf platforms && rm -rf plugins && rm -f config.xml",
    "prepare:copay": "npm run clean && npm run apply:copay && ionic cordova platform add ios; ionic cordova platform add android && npm run fix:fcm",
    "prepare:bitpay": "npm run clean && npm run apply:bitpay  && ionic cordova platform add ios; ionic cordova platform add android && npm run fix:fcm && npm run fix:iab && npm run moveBrazeXML",
    "clean-all": "git clean -dfx",
    "lint": "ionic-app-scripts lint",
    "ionic:build": "ionic-app-scripts build",
    "ionic:serve": "ionic-app-scripts serve --nolivereload",
    "ionic:test": "npm run env:prod && node --max-old-space-size=8192 ./node_modules/@ionic/app-scripts/bin/ionic-app-scripts.js build --release --aot true --environment prod --output-hashing all --sourcemaps false --extract-css true --named-chunks false --build-optimizer true",
    "watch": "ng test --browsers=Chrome",
    "test": "npm run env:dev && npm run test:lint && npm run test:ci",
    "test:coverage": "ng test --code-coverage",
    "test:ci": "ng test --watch=false --code-coverage --no-progress",
    "test:lint": "tslint --project . --format codeFrame && tslint '{test,electron,src}/**/*.ts' --format codeFrame && prettier '{*,**/*}.{js,ts,scss}' --list-different",
    "fix:tslint": "tslint --fix --project . && tslint --fix '{test,electron,src}/**/*.ts'",
    "fix:prettier": "prettier --write '{*,**/*}.{js,ts,md,json,scss}'",
    "fix": "npm run fix:tslint && npm run fix:prettier",
    "fix:iab": "node ./utils/iab-patch.js",
    "env:desktop": "rm -f src/environments/index.ts && cp src/environments/desktop.ts src/environments/index.ts \n\n# Environment set to: desktop\n\n",
    "env:prod": "rm -f src/environments/index.ts && cp src/environments/prod.ts src/environments/index.ts \n\n# Environment set to: prod\n\n",
    "env:dev": "rm -f src/environments/index.ts && cp src/environments/dev.ts src/environments/index.ts \n\n# Environment set to: dev\n\n",
    "translation:extract": "ngx-translate-extract --input ./src --output ./i18n/template.pot --clean --sort --format pot",
    "translation:update": "node ./i18n/crowdin_update.js",
    "translation:download": "node ./i18n/crowdin_download.js",
    "start:ios": "npm run build:ios && npm run open:ios",
    "start:android": "npm run run:android",
    "start:desktop": "npm run build:desktop && electron .",
    "build:ios": "npm run env:dev && ionic cordova build ios --debug --buildConfig",
    "build:android": "npm run env:dev && ionic cordova build android --debug",
    "build:desktop": "npm run env:dev && npm run ionic:build",
    "build:ios-release": "npm run env:prod && ionic cordova build ios --release --aot true --environment prod --output-hashing all --sourcemaps false --extract-css true --named-chunks false --build-optimizer true --buildConfig",
    "build:android-release": "npm run env:prod && ionic cordova plugin add cordova-android-googlepay-issuer-ng@1.0.4 && ionic cordova build android --release --aot true --environment prod --output-hashing all --sourcemaps false --extract-css true --named-chunks false --build-optimizer true",
    "build:desktop-release": "npm run env:desktop && node --max-old-space-size=8192 ./node_modules/@ionic/app-scripts/bin/ionic-app-scripts.js build --prod --uglifyjs ./config/uglify.config.js --webpack ./config/webpack.config.js",
    "build:electron": "npm install electron-builder@22.9.1 --save-dev; node ./electron/build-electron.js",
    "open:ios": "open platforms/ios/*.xcworkspace",
    "open:android": "open -a open -a /Applications/Android\\ Studio.app platforms/android",
    "final:ios": "NODE_OPTIONS=--max_old_space_size=4096 npm run build:ios-release; npm run open:ios",
    "final:android": "NODE_OPTIONS=--max_old_space_size=4096 npm run build:android-release && npm run align:android && npm run signv2:android",
    "final:desktop": "npm run build:desktop-release && npm run build:electron",
    "run:android": "npm run env:dev && ionic cordova run android --device --debug",
    "run:android-release": "npm run env:prod && ionic cordova run android --device --release",
    "log:android": "adb logcat | grep chromium",
    "sign:android": "rm -f platforms/android/app/build/outputs/apk/release/android-release-signed-aligned.apk; jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore ../copay.keystore -signedjar platforms/android/app/build/outputs/apk/release/android-release-signed.apk platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk  copay_play && $ANDROID_HOME/build-tools/28.0.3/zipalign -v 4 platforms/android/app/build/outputs/apk/release/android-release-signed.apk platforms/android/app/build/outputs/apk/release/android-release-signed-aligned.apk",
    "verify:android": "$ANDROID_HOME/build-tools/28.0.3/apksigner verify -v --print-certs platforms/android/app/build/outputs/apk/release/android-release-aligned-signed.apk",
    "signv2:android": "$ANDROID_HOME/build-tools/28.0.3/apksigner sign --ks ../copay.keystore --ks-key-alias copay_play platforms/android/app/build/outputs/apk/release/android-release-aligned-unsigned.apk && mv platforms/android/app/build/outputs/apk/release/android-release-aligned-unsigned.apk platforms/android/app/build/outputs/apk/release/android-release-aligned-signed.apk",
    "align:android": "$ANDROID_HOME/build-tools/28.0.3/zipalign -v 4 platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk platforms/android/app/build/outputs/apk/release/android-release-aligned-unsigned.apk",
    "apply:copay": "cd app-template && node apply.js copay",
    "apply:bitpay": "cd app-template && node apply.js bitpay",
    "apply:bitpay-dev": "cd app-template && NODE_ENV=dev node apply.js bitpay",
    "fix:fcm": "echo platforms/ios/Copay/Resources platforms/ios/Copay/Resources/Resources platforms/ios/Bitpay/Resources platforms/ios/Bitpay/Resources/Resources | xargs -n 1 cp GoogleService-Info.plist 2>/dev/null; mkdir -p platforms/android/app/src/debug platforms/android/app/src/release; echo platforms/android/app/src/debug platforms/android/app/src/release platforms/android/app | xargs -n 1 cp google-services.json",
    "sign:copay-desktop": "npm run sign:copay-linux && npm run sign:copay-windows && npm run sign:copay-macos",
    "sign:copay-macos": "gpg -u 1112CFA1 --output dist/Copay.dmg.sig --detach-sig dist/Copay.dmg",
    "sign:copay-linux": "gpg -u 1112CFA1 --output dist/Copay-linux.zip.sig --detach-sig dist/Copay-linux.zip",
    "sign:copay-windows": "gpg -u 1112CFA1 --output dist/Copay.exe.sig --detach-sig dist/Copay.exe",
    "verify:copay-desktop": "gpg --verify dist/Copay-linux.zip.sig dist/Copay-linux.zip; gpg --verify dist/Copay.exe.sig dist/Copay.exe; gpg --verify dist/Copay.dmg.sig dist/Copay.dmg",
    "sign:bitpay-desktop": "npm run sign:bitpay-linux && npm run sign:bitpay-windows && npm run sign:bitpay-macos",
    "sign:bitpay-macos": "gpg -u 1112CFA1 --output dist/BitPay.dmg.sig --detach-sig dist/BitPay.dmg",
    "sign:bitpay-linux": "gpg -u 1112CFA1 --output dist/BitPay-linux.zip.sig --detach-sig dist/BitPay-linux.zip",
    "sign:bitpay-windows": "gpg -u 1112CFA1 --output dist/BitPay.exe.sig --detach-sig dist/BitPay.exe",
    "verify:bitpay-desktop": "gpg --verify dist/BitPay-linux.zip.sig dist/BitPay-linux.zip; gpg --verify dist/BitPay.exe.sig dist/BitPay.exe; gpg --verify dist/BitPay.dmg.sig dist/BitPay.dmg",
    "setBrazeCredentials": "node utils/braze-config.js",
    "moveBrazeXML": "sh ./utils/braze.sh"
  },
  "dependencies": {
    "@angular/animations": "5.2.11",
    "@angular/common": "5.2.11",
    "@angular/compiler": "5.2.11",
    "@angular/compiler-cli": "5.2.11",
    "@angular/core": "5.2.11",
    "@angular/forms": "5.2.11",
    "@angular/http": "5.2.11",
    "@angular/platform-browser": "5.2.11",
    "@angular/platform-browser-dynamic": "5.2.11",
    "@angular/tsc-wrapped": "4.4.6",
    "@ionic-native/clipboard": "4.14.0",
    "@ionic-native/core": "4.14.0",
    "@ionic-native/device": "4.14.0",
    "@ionic-native/file": "4.14.0",
    "@ionic-native/fingerprint-aio": "4.14.0",
    "@ionic-native/launch-review": "4.14.0",
    "@ionic-native/qr-scanner": "4.14.0",
    "@ionic-native/screen-orientation": "4.14.0",
    "@ionic-native/social-sharing": "4.20.0",
    "@ionic-native/splash-screen": "4.14.0",
    "@ionic-native/status-bar": "4.14.0",
    "@ionic-native/toast": "4.14.0",
    "@ionic-native/user-agent": "4.14.0",
    "@ionic-native/vibration": "4.14.0",
    "@ionic/storage": "2.1.3",
    "@ngx-translate/core": "9.1.1",
    "@walletconnect/client": "1.6.5",
    "abi-decoder": "2.3.0",
    "angular2-moment": "1.7.1",
    "apexcharts": "3.24.0",
    "appboy-cordova-sdk-ng": "https://github.com/JohnathanWhite/appboy-cordova-sdk#master",
    "apple-wallet-ng": "1.1.1",
    "base64-js": "1.3.0",
    "bitauth": "git+https://github.com/bitpay/bitauth.git#68cf0353bf517a7e5293478608839fa904351eb6",
    "bitcore-wallet-client": "8.25.21",
    "buffer-compare": "1.1.1",
    "chart.js": "2.9.4",
    "cordova": "9.0.0",
    "cordova-android": "9.0.0",
    "cordova-apple-wallet-ng": "1.3.1",
    "cordova-clipboard": "1.2.1",
    "cordova-custom-config": "5.1.0",
    "cordova-ios": "5.1.1",
    "cordova-launch-review": "3.1.1",
    "cordova-plugin-add-swift-support": "2.0.2",
    "cordova-plugin-advanced-http": "2.1.0",
    "cordova-plugin-compat": "1.2.0",
    "cordova-plugin-customurlscheme-ng": "13.0.0",
    "cordova-plugin-device": "2.0.1",
    "cordova-plugin-dialogs": "2.0.2",
    "cordova-plugin-fcm-ng": "9.0.0",
    "cordova-plugin-file": "6.0.2",
    "cordova-plugin-fingerprint-aio": "3.0.1",
    "cordova-plugin-globalization": "1.0.9",
    "cordova-plugin-idfa": "2.0.0",
    "cordova-plugin-inappbrowser": "4.1.0",
    "cordova-plugin-ionic-keyboard": "2.1.3",
    "cordova-plugin-qrscanner": "3.0.1",
    "cordova-plugin-screen-orientation": "3.0.2",
    "cordova-plugin-spinner-dialog": "1.3.1",
    "cordova-plugin-splashscreen": "5.0.3",
    "cordova-plugin-statusbar": "2.4.3",
    "cordova-plugin-theme-detection": "1.2.1",
    "cordova-plugin-useragent": "https://github.com/danielsogl/cordova-plugin-useragent.git",
    "cordova-plugin-vibration": "3.1.1",
    "cordova-plugin-whitelist": "1.3.4",
    "cordova-plugin-wkwebview-engine": "1.2.1",
    "cordova-plugin-x-socialsharing": "5.6.8",
    "cordova-plugin-x-toast": "2.6.0",
    "cordova-support-android-plugin": "1.0.2",
    "countries-list": "2.5.5",
    "es6-promise-plugin": "4.2.2",
    "eth-sig-util": "3.0.1",
    "fcm-ng": "2.1.0",
    "gettext-parser": "1.3.0",
    "ionic-angular": "3.9.10",
    "ionic-image-loader": "6.3.2",
    "ionicons": "3.0.0",
    "lodash": "4.17.21",
    "ngx-barcode": "0.2.4",
    "ngx-markdown": "1.5.2",
    "ngx-qrcode2": "0.1.0",
    "ngx-text-overflow-clamp": "0.0.1",
    "node-gyp-build": "^4.3.0",
    "papaparse": "5.3.0",
    "qr-code-component-ng": "0.0.4",
    "rxjs": "5.5.12",
    "text-encoding": "0.6.4",
    "text-mask-core": "5.1.2",
    "web-animations-js": "2.3.1",
    "zone.js": "0.8.26"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "0.12.4",
    "@angular/cli": "7.1.4",
    "@biesbjerg/ngx-translate-extract": "2.3.4",
    "@ionic-native-mocks/file": "2.0.12",
    "@ionic-native-mocks/fingerprint-aio": "2.0.12",
    "@ionic-native-mocks/qr-scanner": "2.0.12",
    "@ionic/app-scripts": "3.2.3",
    "@types/chrome": "0.0.64",
    "@types/cordova-plugin-qrscanner": "1.0.31",
    "@types/jasmine": "2.8.6",
    "@types/lodash": "4.14.121",
    "@types/node": "12.12.6",
    "@types/papaparse": "4.1.34",
    "@types/prismjs": "1.9.1",
    "adm-zip": "0.4.13",
    "codecov": "3.7.2",
    "cordova-plugin-androidx-adapter": "1.1.3",
    "core-js": "2.6.10",
    "electron": "^15.1.2",
    "electron-builder": "^22.9.1",
    "fs-extra": "9.0.1",
    "ionic": "4.10.4",
    "ionic-mocks": "1.2.1",
    "jasmine-core": "2.99.1",
    "jasmine-reporters": "2.3.0",
    "karma": "3.1.3",
    "karma-chrome-launcher": "2.2.0",
    "karma-cli": "1.0.1",
    "karma-coverage-istanbul-reporter": "1.4.1",
    "karma-jasmine": "1.1.1",
    "karma-jasmine-html-reporter": "0.2.2",
    "karma-spec-reporter": "0.0.32",
    "mini-css-extract-plugin": "0.8.0",
    "prettier": "2.1.2",
    "shelljs": "0.8.1",
    "ts-node": "5.0.0",
    "tslint": "5.8.0",
    "tslint-config-prettier": "1.18.0",
    "typescript": "^4.0.5",
    "webpack": "3.12.0",
    "webpack-obfuscator": "0.17.3"
  },
  "config": {
    "ionic_uglifyjs": "./config/uglifyjs.config.js",
    "ionic_bundler": "webpack",
    "ionic_webpack": "./config/webpack.config.js"
  },
  "cordova": {
    "plugins": {
      "cordova-plugin-device": {},
      "cordova-plugin-splashscreen": {},
      "cordova-plugin-statusbar": {},
      "cordova-plugin-whitelist": {},
      "cordova-plugin-ionic-keyboard": {},
      "cordova-clipboard": {},
      "cordova-plugin-x-toast": {},
      "cordova-plugin-x-socialsharing": {},
      "cordova-plugin-qrscanner": {},
      "cordova-plugin-dialogs": {},
      "cordova-plugin-file": {},
      "cordova-custom-config": {},
      "cordova-plugin-customurlscheme-ng": {
        "URL_SCHEME": "bitcoin",
        "SECOND_URL_SCHEME": "bitpay",
        "THIRD_URL_SCHEME": "bitcoincash",
        "FOURTH_URL_SCHEME": "bchtest",
        "FIFTH_URL_SCHEME": "ethereum",
        "SIXTH_URL_SCHEME": "ripple",
        "SEVENTH_URL_SCHEME": "wc",
        "EIGHTH_URL_SCHEME": "dogecoin",
        "ANDROID_SCHEME": "",
        "ANDROID_HOST": "",
        "ANDROID_PATHPREFIX": "",
        "UL_HOST": "",
        "UL_TEST_HOST": "",
        "UL_STAGING_HOST": "",
        "UL_PREFIX_1": "",
        "UL_PREFIX_2": ""
      },
      "cordova-plugin-fcm-ng": {
        "PAGE_LINK_DOMAIN": "bitpayapp.page.link"
      },
      "cordova-plugin-globalization": {},
      "cordova-plugin-inappbrowser": {},
      "cordova-plugin-screen-orientation": {},
      "cordova-plugin-spinner-dialog": {},
      "cordova-plugin-vibration": {},
      "im.ltdev.cordova.UserAgent": {},
      "cordova-launch-review": {},
      "cordova-plugin-wkwebview-engine": {},
      "cordova-plugin-advanced-http": {},
      "cordova-plugin-theme-detection": {},
      "cordova-apple-wallet-ng": {},
      "cordova-plugin-add-swift-support": {},
      "cordova-plugin-fingerprint-aio": {
        "FACEID_USAGE_DESCRIPTION": " "
      },
      "cordova-plugin-idfa": {
        "ANDROID_PLAY_ADID_VERSION": "17.0.+"
      },
      "cordova-plugin-androidx-adapter": {},
      "appboy-cordova-sdk-ng": {}
    },
    "platforms": [
      "android",
      "ios"
    ]
  },
  "prettier": {
    "singleQuote": true,
    "trailingComma": "none",
    "arrowParens": "avoid"
  }
}
